# -*- coding: utf-8 -*-
"""Copy of senti.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EXIZYd4OFekrBslB2ni2B5TP3xX9rmK2
"""

import pandas as pd
import time
from sklearn.feature_extraction.text import CountVectorizer
from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score



from google.colab import files

uploaded = files.upload()





df = pd.read_excel("sam.xlsx")
df = df.dropna()
df = df.applymap(str)
print(df.head)
cv = CountVectorizer()
x = cv.fit_transform(df['message'])
y = df['label']

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=42)









# Perform classification with SVM, kernel=linear
classifier_linear = svm.SVC(kernel='linear')
t0 = time.time()
classifier_linear.fit(x_train, y_train)
t1 = time.time()
prediction_linear = classifier_linear.predict(x_test)
t2 = time.time()
time_linear_train = t1-t0
time_linear_predict = t2-t1
# Showing Training Time & Prediction Time
print("Training time: %fs; Prediction time: %fs" % (time_linear_train, time_linear_predict))





# results
# print("Training time: %fs; Prediction time: %fs" % (time_linear_train, time_linear_predict))
#report = classification_report(y_test, prediction_linear, output_dict=True)
#print('positive: ', report['2'])
#print('negative: ', report['1'])





# get the accuracy
print (accuracy_score(y_test, prediction_linear))

review = "মায়ের গল্প /কাহিনী শুনলে বা দেখলে চোখে জল এসে যায়। সুন্দর একটি ভিডিও উপহার জন্য গ্রামিনলফোন কে ধন্যবাদ।।"
review_vector = cv.transform([review]) # vectorizing
print(classifier_linear.predict(review_vector))





